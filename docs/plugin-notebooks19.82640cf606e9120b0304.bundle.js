"use strict";(self.webpackChunkKuiClientTemplate=self.webpackChunkKuiClientTemplate||[]).push([[80205],{53236:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});const o='---\ntitle: Kubernetes &mdash; Working with Jobs\nlayout:\n    1: left\n---\n\n# :material-kubernetes:\n\n# Batch Jobs in Kubernetes\n\nA Job creates one or more Pods and will continue to retry execution of the Pods until a specified number of them successfully terminate. As pods successfully complete, the Job tracks the successful completions. When a specified number of successful completions is reached, the task (ie, Job) is complete. Deleting a Job will clean up the Pods it created. Suspending a Job will delete its active Pods until the Job is resumed again.\n\n---\n\n???+ tip "Controlling Parallelism"\n\n    Kubernetes Jobs use two parameters, `completions` and `parallelism`, to control how a Job is subdivided into units of work. Each unit of work is executed by a Pod.\n\n## Scheduling a Job\n\nFirst, let\'s create a namespace to keep our work isolated:\n\n```bash\n---\nvalidate: kubectl get ns kui-notebook-2\ncleanup: kubectl delete ns kui-notebook-2\n---\nkubectl create ns kui-notebook-2\n```\n\nTo schedule a job, use `kubectl apply` with a definition of your\njob. The following command applies a `job.yaml` to our scratch\nnamespace. The response from this command is a live visualization of\nthe progress of the Job.\n\n```bash\n---\nvalidate: kubectl get job pi -n kui-notebook-2\ncleanup: kubectl delete job pi -n kui-notebook-2\n---\nk apply -f https://raw.githubusercontent.com/kubernetes-sigs/kui/master/plugins/plugin-kubectl/tests/data/k8s/job2.yaml -n kui-notebook-2\n```\n\nThis visualization shows how the tasks of our Job are scheduled, over\ntime. You can see concurrency and cold start penalties. The live table\nwill update as tasks are scheduled.\n\n---\n\n```bash\n---\nexecute: now\n---\nkubectl dashboard job -n kui-notebook-2 --watch\n```\n\n---\n\n```bash\n---\nexecute: now\n---\nkubectl get events -n kui-notebook-2 --field-selector=involvedObject.kind=Pod --field-selector=involvedObject.kind=Job --watch\n```\n'}}]);