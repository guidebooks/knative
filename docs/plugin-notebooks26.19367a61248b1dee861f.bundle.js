"use strict";(self.webpackChunkKuiClientTemplate=self.webpackChunkKuiClientTemplate||[]).push([[36864],{99583:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o='---\ntitle: Knative &mdash; Scaling to Zero\nlayout:\n    1: left\n    default: wizard\nwizard:\n    steps:\n        - match: Scaling to Zero\n          name: Introduction\n        - Run your Knative Service\n---\n\n[![Knative logo](https://knative.dev/docs/images/logo/rgb/knative-logo-rgb.png)](https://knative.dev)\n\n# Knative\n\n[Knative](https://knative.dev) is enterprise-grade Serverless on\nyour own terms, a Kubernetes-based platform to deploy and manage\nmodern serverless workloads.\n\nKnative components build on top of\n[Kubernetes](https://kubernetes.io/), abstracting away the complex\ndetails and enabling developers to focus on what matters. Built by\ncodifying the best practices shared by successful real-world\nimplementations, Knative solves the "boring but difficult" parts of\ndeploying and managing cloud native services so you don\'t have to.\n\n\x3c!-- oof, there is no great way of using markdown to specify a desired image size --\x3e\n\n<a href="https://github.com/knative">\n  <img alt="Github Logo" src="https://avatars.githubusercontent.com/u/26377421?v=4" width="40">\n</a>\n\n---\n\n## How Knative Scales to Zero\n\n---\n\n# Scaling to Zero\n\n**Remember those super powers :rocket: we talked about?** One of Knative Serving\'s powers is built-in automatic scaling, also known as **autoscaling**.\nThis means your Knative Service only spins up your application to perform its job (in this case, saying "Hello world!") if it is needed.\nOtherwise, it will **scale to zero** by spinning down and waiting for a new request to come in.\n\n??? question "What about scaling up to meet increased demand?"\n    Knative Autoscaling also allows you to easily configure your service to scale up\n    (horizontal autoscaling) to meet increased demand as well as control the number of instances that\n    spin up using\n    [concurrency limits and other options](https://raw.githubusercontent.com/knative/docs/main/serving/autoscaling/concurrency/){target=_blank},\n    but that\'s beyond the scope of this tutorial.\n\n**Let\'s see this in action!** We\'re going to peek under the hood at the\n[Pod](https://kubernetes.io/docs/concepts/workloads/pods/){target=blank_} in Kubernetes where our\nKnative Service is running to watch our "Hello world!" Service scale up and down.\n\n## Watch your Knative Service scale to zero\n\nLet\'s run our "Hello world!" Service just one more time. This time, try the Knative Service `URL` in\nyour browser\n[http://hello.default.127.0.0.1.sslip.io](http://hello.default.127.0.0.1.sslip.io){target=_blank}, or you\ncan use your terminal with `curl`.\n```bash\ncurl http://hello.default.127.0.0.1.sslip.io\n```\n\nNow watch the pods and see how they scale to zero after traffic stops going to the URL.\n```bash\nkubectl get pod -l serving.knative.dev/service=hello -w\n```\n\n!!! warning\n    It may take up to 2 minutes for your Pods to scale down. Pinging your service again will reset this timer.\n\n\n!!! Success "Expected output"\n    ```{ .bash .no-copy }\n    NAME                                     READY   STATUS\n    hello-world                              2/2     Running\n    hello-world                              2/2     Terminating\n    hello-world                              1/2     Terminating\n    hello-world                              0/2     Terminating\n    ```\n\n## Scale up your Knative Service\n\nRerun the Knative Service in your browser [http://hello.default.127.0.0.1.sslip.io](http://hello.default.127.0.0.1.sslip.io){target=_blank}, and you will see a new pod running again.\n\n!!! Success "Expected output"\n    ```{ .bash .no-copy }\n    NAME                                     READY   STATUS\n    hello-world                              0/2     Pending\n    hello-world                              0/2     ContainerCreating\n    hello-world                              1/2     Running\n    hello-world                              2/2     Running\n    ```\nExit the watch command with `Ctrl+c`.\n\nSome people call this **Serverless** :tada: :taco: :fire: Up next, traffic splitting!\n\n??? question "Want to go deeper on Autoscaling?"\n    Interested in getting in the weeds with Knative Autoscaling? Check out the [autoscaling documentation](https://raw.githubusercontent.com/knative/docs/main/docs/serving/autoscaling/README.md){target=_blank} for concepts, samples, and more!\n\n\x3c!-- This is a demonstration of including unmodified markdown content, and overlaying a wizard --\x3e\n'}}]);